name: Prod deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

    # If you define both branches/branches-ignore and paths/paths-ignore, the workflow will only run when both filters are satisfied.

jobs:
  front-end-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: npm install and build
        run: |
          npm install
          VITE_API_BASE_URL=/api npm run build
      - name: SCP Files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: "client/dist/*"
          target: "/var/www/bookbook"
          strip_components: 2
  back-end-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Server
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Publish
        run: dotnet publish ./src/Server.Api --nologo --output ./dist --configuration Release
      - name: Create migration bundle
        run: |
          dotnet tool install --global dotnet-ef --version 7.0.14
          dotnet ef migrations bundle --runtime linux-x64 -s src/Server.Api/ --verbose
          mv efbundle ./dist
        # TODO - egzekucja efbundla (chmod +x) i restart service'u
      - name: Upload files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: "Server/dist/*"
          target: "/var/www/bookbook-api"
          strip_components: 2
      - name: Execute deployment script on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: sudo /var/scripts/deploy-api.sh
